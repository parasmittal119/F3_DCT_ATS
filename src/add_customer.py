# -*- coding: utf-8 -*-
import csv

from PyQt5 import QtCore, QtGui, QtWidgets

import gui_global
from prompts import Prompt


# Form implementation generated from reading ui file '.\ADD_CUSTOMER.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


class Ui_Customer(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(292, 251)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(f"{gui_global.image_directory_location}logo_1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        self.add_customer = QtWidgets.QGroupBox(Form)
        self.add_customer.setGeometry(QtCore.QRect(10, 10, 271, 231))
        self.add_customer.setBaseSize(QtCore.QSize(10, 0))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.add_customer.setFont(font)
        self.add_customer.setObjectName("add_customer")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.add_customer)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 40, 251, 41))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.lineEdit = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.add_customer)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 120, 251, 41))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem1)
        self.comboBox = QtWidgets.QComboBox(self.horizontalLayoutWidget_2)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.horizontalLayout_2.addWidget(self.comboBox)
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.add_customer)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(10, 80, 251, 41))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.horizontalLayoutWidget_3)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_3.addWidget(self.label_2)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.horizontalLayoutWidget_3)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_3.addWidget(self.lineEdit_2)
        self.pushButton = QtWidgets.QPushButton(self.add_customer)
        self.pushButton.setGeometry(QtCore.QRect(100, 200, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.Writing)
        self.pushButton_2 = QtWidgets.QPushButton(self.add_customer)
        self.pushButton_2.setGeometry(QtCore.QRect(190, 190, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.add_customer)
        self.pushButton_3.setGeometry(QtCore.QRect(10, 190, 75, 23))
        self.pushButton_3.setObjectName("pushButton_3")

        self.horizontalLayoutWidget_6 = QtWidgets.QWidget(self.add_customer)
        self.horizontalLayoutWidget_6.setGeometry(QtCore.QRect(10, 160, 251, 41))
        self.horizontalLayoutWidget_6.setObjectName("horizontalLayoutWidget_6")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_2")
        self.label_6 = QtWidgets.QLabel(self.horizontalLayoutWidget_6)
        self.label_6.setObjectName("label_3")
        self.horizontalLayout_6.addWidget(self.label_6)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem6)
        self.comboBox1 = QtWidgets.QComboBox(self.horizontalLayoutWidget_6)
        self.comboBox1.setObjectName("comboBox")
        self.comboBox1.addItem("")
        self.comboBox1.addItem("")
        self.horizontalLayout_6.addWidget(self.comboBox1)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Add Customer"))
        self.add_customer.setTitle(_translate("Form", "Add Customer"))
        self.label.setText(_translate("Form", "Part Number"))
        self.label_3.setText(_translate("Form", "Customer"))
        self.label_6.setText(_translate("Form", "MCM Type"))
        self.comboBox.setCurrentText(_translate("Form", "NONE"))
        self.comboBox.setItemText(0, _translate("Form", "NONE"))
        self.comboBox.setItemText(1, _translate("Form", "BSNL"))
        self.comboBox.setItemText(2, _translate("Form", "RELIANCE"))
        self.comboBox.setItemText(3, _translate("Form", "PGCIL"))
        self.comboBox.setItemText(4, _translate("Form", "DMRC"))
        self.comboBox.setItemText(5, _translate("Form", "BIL"))
        self.comboBox.setItemText(6, _translate("Form", "ATC"))
        self.comboBox.setItemText(7, _translate("Form", "VODAFONE"))
        self.comboBox1.setItemText(0, _translate("Form", "M1000"))
        self.comboBox1.setItemText(1, _translate("Form", "M2000"))
        self.label_2.setText(_translate("Form", "Config Ver"))
        self.pushButton.setText(_translate("Form", "Add"))
        self.pushButton_2.setText(_translate("Form", "Exit"))
        self.pushButton_3.setText(_translate("Form", "Bulk Upload"))

        self.pushButton_2.hide()
        self.pushButton_3.hide()

        self.prompt = Prompt()


    def Writing(self):
        filename = "customer_detail.csv"
        self.partnumber = self.lineEdit.text().upper()
        self.config = self.lineEdit_2.text().upper()
        self.customerName = self.comboBox.currentText()
        row_found = []
        if self.partnumber == "" or self.config == "" or self.customerName == "NONE":
            self.prompt.Message("Warning", "Kindly fill all details to add Part-code")
        else:
            try:
                with open(f"{gui_global.files_directory_location}{filename}", 'r') as csv_file:
                    csv_reader = csv.reader(csv_file)
                    for row in csv_reader:
                        if self.partnumber in row:
                            row_found = row
                            break
                        else:
                            row_found = []

                if row_found != []:
                    print(type(row_found[0]), type(row_found[1]), type(row_found[2]))
                    if row_found[0] == self.partnumber and row_found[2] == self.customerName and row_found[1] == self.config:
                        self.prompt.Message("Warning", f"Part-code {self.partnumber} is already registered with {self.customerName} as customer and has same config version\nKindly Enter a new part-code to register.")

                    elif row_found[0] == self.partnumber and row_found[2] == self.customerName and row_found[1] != self.config:
                        self.Update_CSV_Test_Item(filename, [[self.partnumber, self.config, self.customerName, self.comboBox1.currentText()]])
                        self.prompt.Message("Registered!",
                                       f"Part-code {self.partnumber} is registered with {self.customerName} as customer name and {self.config} as config version")
                elif row_found == []:
                    self.Update_CSV_Test_Item(filename, [[self.partnumber, self.config, self.customerName, self.comboBox1.currentText()]])
                    self.prompt.Message("Registered!",
                                   f"Part-code {self.partnumber} is registered with {self.customerName} as customer name and {self.config} as config version")

            except IndexError as e:
                print(e)
                self.prompt.Message("Warning", f"Follow error occurred: \n {e}")

    def Update_CSV_Test_Item(self, filename, parameter_list=[]):
        if parameter_list == []:
            return None
        new_rows = parameter_list
        # print(new_rows)
        with open(f"{gui_global.files_directory_location}"+filename, 'a', newline="") as file:
            writer = csv.writer(file)
            writer.writerows(new_rows)


# Ui_Customer.Writing(Ui_Customer)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Customer()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
